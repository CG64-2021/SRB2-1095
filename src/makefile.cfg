#
# Makefile.cfg for SRB2
#

#
# GNU compiler & tools' flags
# and other things
#

ifdef GCC41
GCC40=1
VCHELP=1
endif

ifdef GCC295
GCC29=1
endif

# -W -Wno-unused
WFLAGS = -Wall
ifndef GCC295
#WFLags += -Wno-packed
endif
ifdef ERRORMODE
WARNINGMODE = 1
endif
ifdef WARNINGMODE
 WFLAGS += -W
#WFLAGS += -Wno-sign-compare
ifndef GCC295
 WFLAGS += -Wno-div-by-zero
endif
#WFLAGS += -Wsystem-headers
ifndef ERRORMODE
#WFLAGS += -Wfloat-equal
endif
#WFLAGS += -Wtraditional
ifdef VCHELP
 WFLAGS += -Wdeclaration-after-statement
endif
 WFLAGS += -Wundef
ifndef GCC295
 WFLAGS += -Wendif-labels
endif
ifdef GCC41
 WFLAGS += -Wshadow
endif
#WFLAGS += -Wlarger-than-%len%
 WFLAGS += -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wwrite-strings
ifndef ERRORMODE
#WFLAGS += -Wconversion
endif
 WFLAGS += -Wsign-compare
 WFLAGS += -Waggregate-return
#WFLAGS += -Wstrict-prototypes
ifdef GCC40
 WFLAGS += -Wold-style-definition
endif
ifndef XBOX
 WFLAGS += -Wmissing-prototypes -Wmissing-declarations
endif
ifdef GCC40
 WFLAGS += -Wmissing-field-initializers
endif
ifndef XBOX
 WFLAGS += -Wmissing-noreturn
endif
#WFLAGS += -Wmissing-format-attribute
#WFLAGS += -Wno-multichar
#WFLAGS += -Wno-deprecated-declarations
#WFLAGS += -Wpacked
#WFLAGS += -Wpadded
#WFLAGS += -Wredundant-decls
 WFLAGS += -Wnested-externs
#WFLAGS += -Wunreachable-code
 WFLAGS += -Winline
ifndef GCC295
 WFLAGS += -Wdisabled-optimization
endif
endif
ifdef ERRORMODE
WFLAGS += -Werror
endif


#indicate platform and what interface use with
ifndef WINCE
ifndef XBOX
ifndef PSP
ifndef DC
ifndef LINUX
ifndef FREEBSD
ifndef CYGWIN32
ifndef MINGW
ifndef SDL
ifndef DUMMY
	DJGPPDOS=1
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif

#determine the interface directory (where you put all i_*.c)
i_cdmus_o=$(OBJDIR)/i_cdmus.o
i_net_o=$(OBJDIR)/i_net.o
i_system_o=$(OBJDIR)/i_system.o
i_sound_o=$(OBJDIR)/i_sound.o
i_main_o=$(OBJDIR)/i_main.o
#set OBJDIR and BIN's starting place
OBJDIR=../objs
BIN=../bin
#Nasm ASM and rm
ifdef ECHO
NASM=nasm
REMOVE=rm -f
else
NASM=@nasm
REMOVE=@rm -f
endif

MKDIR?=mkdir -p

#Interface Setup
ifdef DJGPPDOS
	INTERFACE=djgppdos
	NASMFORMAT=coff
	OBJDIR := $(OBJDIR)/djgppdos
ifdef WATTCP
	OBJDIR := $(OBJDIR)/wattcp
endif
	BIN := $(BIN)/Dos
else
ifdef DUMMY
	INTERFACE=dummy
	OBJDIR := $(OBJDIR)/dummy
	BIN := $(BIN)/dummy
else
ifdef LINUX
	INTERFACE=sdl
	NASMFORMAT=elf -DLINUX
	SDL=1

	OBJDIR := $(OBJDIR)/Linux
	BIN := $(BIN)/Linux
else
ifdef FREEBSD
	INTERFACE=sdl
	NASMFORMAT=elf -DLINUX
	SDL=1

	OBJDIR := $(OBJDIR)/FreeBSD
	BIN := $(BIN)/FreeBSD
else
ifdef SOLARIS
	INTERFACE=sdl
	NASMFORMAT=elf -DLINUX
	SDL=1

	OBJDIR := $(OBJDIR)/Solaris
	BIN := $(BIN)/Solaris
else
ifdef CYGWIN32
	INTERFACE=sdl
	NASMFORMAT=win32
	SDL=1
	OBJDIR := $(OBJDIR)/cygwin
	BIN := $(BIN)/Cygwin
else
ifdef MINGW
	INTERFACE=win32
	NASMFORMAT=win32
	ifndef CCBS
	ifdef ECHO
		NASM=nasm
	else
		NASM=@nasm
	endif
	endif
	OBJDIR := $(OBJDIR)/Mingw
	BIN := $(BIN)/Mingw
else
ifdef XBOX
	INTERFACE=sdl
	NASMFORMAT=win32
ifndef PREFIX
	PREFIX=/usr/local/openxdk/bin/i386-pc-xbox
endif
	SDL=1
	OBJDIR := $(OBJDIR)/XBOX
	BIN := $(BIN)/XBOX

else
ifdef PSP
	INTERFACE=sdl
	NONX86=1
	SDL=1
	OBJDIR := $(OBJDIR)/PSP
	BIN := $(BIN)/PSP
else
ifdef DC
	INTERFACE=sdl
	NONX86=1
	SDL=1
	OBJDIR := $(OBJDIR)/DC
	BIN := $(BIN)/DC
else
ifdef WINCE
	INTERFACE=sdl
	NONX86=1
ifndef PREFIX
	PREFIX=arm-wince-pe
endif
	SDL=1
	OBJDIR := $(OBJDIR)/WinCE
	BIN := $(BIN)/WinCE
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif
endif

# gcc or g++
ifdef PREFIX
	ifdef ECHO
		CC=$(PREFIX)-gcc
		WINDRES=$(PREFIX)-windres
		DLLWRAP=$(PREFIX)-dllwrap
	else
		CC=@$(PREFIX)-gcc
		WINDRES=@$(PREFIX)-windres
		DLLWRAP=@$(PREFIX)-dllwrap
	endif
else
	ifdef ECHO
		WINDRES=windres
		DLLWRAP=dllwrap
	else
		CC:=@$(CC)
		WINDRES=@windres
		DLLWRAP=@dllwrap
	endif
endif

ifdef SDL
# SDL 2.0
ifndef SDL12
	INTERFACE=sdl
# SDL 1.2
else
	INTERFACE=sdl12
endif
	OBJDIR:=$(OBJDIR)/SDL
endif

ifndef DUMMY
ifdef DEBUGMODE
	OBJDIR := $(OBJDIR)/Debug
	BIN := $(BIN)/Debug
else
	OBJDIR := $(OBJDIR)/Release
	BIN := $(BIN)/Release
endif
endif

LD=$(CC)
